% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1.f.data.prep.R
\name{thin.batch}
\alias{thin.batch}
\title{Spatially thin a list of species occurrence data}
\usage{
thin.batch(loc.data.lst, dist = 10000, method = "heuristic", nrep = 10,
  great.circle.distance = FALSE, numCores = 1, ...)
}
\arguments{
\item{loc.data.lst}{Named list containing data.frames/SpatialPoints/SpatialPointsDataFrame
of species occurence locations. Each data.frame can include several columnns, but must
include at minimum a column of latitude and a column of longitude values}

\item{dist}{\code{numeric} minimum distance (m) between records.}

\item{method}{\code{character} name of method to solve problem: \itemize{
    \item{'heuristic': data is thinned using a stingy heuristic algorithm; this involves sequentially removing points until the smallest distance between any point is greater than \code{mindist}.}
    \item{'lpsolve': the problem is expressed as an integer programming problem and solved using LpSolve.}
    \item{'gurobi': as above, but solved using Gurobi.}
}}

\item{nrep}{\code{numeric} number of replicate thinned data sets to produce when using the \code{heuristic} method.}

\item{great.circle.distance}{\code{logical} if \code{TRUE} great circle distances will be used for distance calculations, else euclidean distances will be be used.}

\item{numCores}{Number of cores to use for parallelization. If set to 1, no paralellization is performed}

\item{...}{additional arguments passed to \code{\link[lpSolveAPI]{lp.control}} if method=='lpsolve' or gurobi::gurobi() if method=='gurobi'.}
}
\value{
Named list containing thinned datasets for each species. See ?thin of spThin package.
}
\description{
Will use spThin optimisation algorithm to subset the dataset such that
all occurrence locations are a minimum distance apart. This process helps
reduce the effect of biases in observation records on the predictive
performance of ecological niche models.
}
\details{
Make sure coordinates are in decimal degrees. This function will use
great.circle.distance to thin the datasets
}
\examples{
thinned.dataset.batch <- thin.batch(loc.data.lst = spp.occ.list)
plotThin(thinned.dataset.batch[[1]])
length(thinned.dataset.batch[[1]])
}
\seealso{
\code{\link[spThin]{spThin}}, \code{\link{loadTocc}}
}

